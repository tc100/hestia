extends ../layout

block title
    title Hestia - Funcionarios
 
block content
    section
      // Modal
      #myModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel')
        .modal-dialog(role='document')
          .modal-content
            .modal-header
              button.close(type='button', data-dismiss='modal', aria-label='Close')
                span(aria-hidden='true') ×
              h4#myModalLabel.modal-title Detalhes
            #modalConteudo.modal-body
      .col-sm-2.col-sm-offset-10
        a.btn.btn-default.glyphicon.glyphicon-plus(href='/funcionario/criar')  Novo
      div.col-sm-8.col-sm-offset-2
        table.table.table-striped#lista-funcionarios
          tr
            th.col-sm-10 Nome
            th.col-sm-2 Ações
          //tr.linha-tabela.hidden
            //td [nome]
            //td [login]
            //td
            //  a.btn.btn-default(href='/funcionario/editar')
            //    i.fa.fa-pencil(aria-hidden='true')
            //  button#detalhe.btn.btn-default
            //    i.fa.fa-list(aria-hidden='true')
block footer
    script.
      config = {
                      ele: 'body', // which element to append to
                      type: 'danger', // (null, 'info', 'danger', 'success')
                      offset: {from: 'top', amount: 20}, // 'top', or 'bottom'
                      align: 'center', // ('left', 'right', or 'center')
                      width: 750, // (integer, or 'auto')
                      delay: 4000, // Time while the message will be displayed. It's not equivalent to the *demo* timeOut!
                      allow_dismiss: true, // If true then will display a cross to close the popup.
                      stackup_spacing: 10 // spacing between consecutively stacked growls.
                    };
        $.get('/funcionario/getFuncs',function(response){
            for( x in response.funcionarios){
              var ativo = response.funcionarios[x].ativo;
              if(ativo == undefined|| ativo){
                var html = '<tr id="'+response.funcionarios[x].id+'"><td>'+response.funcionarios[x].nome+'</td>'+
                            '<td>'+
                              '<a class="btn btn-default" href="/funcionario/editar?id='+ response.funcionarios[x].id+'"><i class="fa fa-pencil" aria-hidden="true"></i></a>'+
                              '<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal" data-id="'+ response.funcionarios[x].id+'"><i class="fa fa-list" aria-hidden="true"></i></button>'+
                              '<button type="button" onClick="deletar('+"'"+response.funcionarios[x].id+"'"+')" class="btn btn-default"><i class="fa fa-times" aria-hidden="true"></i></button>'+
                            '</td>';
              }else{
                var html = '';
              }
              $("#lista-funcionarios").append(html);
            }
        });
        var url = window.location.href;
        var id = 'x';
        $('#myModal').on('show.bs.modal', function (event) {
          debugger;
          var button = $(event.relatedTarget) // Button that triggered the modal
          id = button.data('id') // Extract info from data-* attributes
          // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
          // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
          var modal = $(this)
          $('#modalConteudo').load('/funcionario/detalhes?id='+id);
        })
        $("#deletar").click(function(){
            alert("The paragraph was clicked.");
        });
        function deletar(idUsuario){
          $.get('/funcionario/delete/'+idUsuario,function(response){
              if(response == "desativado"){
                  $("#"+idUsuario).remove();
              }
          });
        }
        
        
     
